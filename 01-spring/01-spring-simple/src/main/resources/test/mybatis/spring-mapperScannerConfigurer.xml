<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- spring整合mybatis -->
    <!-- 加载classpath下的db.properties文件，里面配了数据库连接的一些信息 -->
    <context:property-placeholder location="classpath:test/mybatis/jdbc.properties"/>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="maxTotal" value="10" />
        <property name="maxIdle" value="5" />
        <property name="minIdle" value="1" />
        <property name="defaultAutoCommit" value="true" />
    </bean>

    <!-- 配置sqlSessionFactory，SqlSessionFactoryBean 是用来产生 sqlSessionFactory 的 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 加载m ybatis 的全局配置文件，放在 classpath 下的 mybatis 文件夹中了 -->
        <property name="configLocation" value="test/mybatis/mybatis-spring.xml" />
        <!-- 加载数据源，使用上面配置好的数据源 -->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- MapperScannerConfigurer：根据包路径下的所有 mapper 接口批量生成的代理对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.SpringSourceAnalysis.ch09.mybatis"/>
    </bean>
</beans>
