<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd" profile="dev">

	<!-- PropertyPlaceholderConfigurer的父类实现了BeanFactoryPostProcessor接口-->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!--注意这两种value值的写法-->
<!--				<value>/WEB-INF/mail.properties</value>-->
<!--				<value>classpath: META-INF/jdbc.properties</value>-->
				<value>classpath: META-INF/bean.properties</value>
			</list>
		</property>
		<property name="fileEncoding">
			<value>UTF-8</value>
		</property>
	</bean>

	<!-- BeanFactoryPostProcessor的典型应用: 配置JDBC，引用上面配置的jdbc.properties的值，没有引jar包，所以这里不能用 -->
<!--	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
<!--		<property name="driverClassName" value="${jdbc.driverClassName}" />-->
<!--		<property name="url" value="${jdbc.url}" />-->
<!--		<property name="username" value="${jdbc.username}"/>-->
<!--		<property name="password" value="${jdbc.password}" />-->
<!--	</bean>-->

	<bean id="message" class="com.SpringSource.ch06.distConfig.HelloMessage">
		<property name="mes">
			<value>${bean.message}</value>
		</property>
	</bean>

	<bean id="bfpp" class="com.SpringSource.ch06.ObscenityRemovingBeanFactoryPostProcessor">
		<property name="obscenties">
			<set>
				<value>bollocks</value>
				<value>winky</value>
				<value>bum</value>
				<value>Microsoft</value>
			</set>
		</property>
	</bean>

	<bean id="simpleBean" class="com.SpringSource.ch06.SimplePostProcessor">
		<property name="connectionString" value="bollocks"/>
		<property name="password" value="imaginecup"/>
		<property name="username" value="Microsoft"/>
	</bean>
</beans>