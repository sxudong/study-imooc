Subttl.		Include file for GREEN PC support DUAL/MULTIPROCESSOR SMI code...GPMMP.CSS...GENERIC

;---------------------------------------------------------------;
;*****************************************************************;
;*****************************************************************;
;**								**;
;**	(C)Copyright 1985-1996, American Megatrends Inc.	**;
;**								**;
;**			All Rights Reserved.			**;
;**								**;
;**		6145-F, Northbelt Parkway, Norcross,		**;
;**								**;
;**		Georgia - 30071, USA. Phone-(770)-246-8600.	**;
;**								**;
;*****************************************************************;
;*****************************************************************;
;---------------------------------------------------------------;
;	The following code will be moved to each DUAL/		;
;	MULTIPROCESSOR SMI handler (except BSP processor)	;
;	Although the code is moved to .CSS (chipset specific)	;
;	module, NORMALLY NO CHANGE IS NECESSARY FOR THIS CODE.	;
;---------------------------------------------------------------;
; DUAL/MULTIPROCESSOR ACTUAL SMI SUPPORT FOR INTEL/AMD PLUS CPU	;
;---------------------------------------------------------------;
;		  INTEL_NON_BSP_CPU_SMI_ENTRY			;
;---------------------------------------------------------------;
;	Input : NONE						;
;	Output: NONE						;
;	Register destroyed : ALL				;
;---------------------------------------------------------------;

intel_non_bsp_cpu_smi_entry	proc	near

	cli					; disable interrupts
	cld					; clear direction flag

;-----------------------------------------------;
;      FOLLOWING PIECE OF CODE IS REQUIRED	;
;     IF SMBASE IS RELOCATED, AS CS SELECTOR	;
;	WILL STILL CONTAIN 3000H NOT THE	;
;	      VALUE OF NEW SMBASE		;
;-----------------------------------------------;

	mov	eax,cs:cpu_dump_smbase_slot_intl; (eax) = absolute SMBASE
	shr	eax,4				; (eax) = SMBASE address selector
	mov	di,(offset cgroup:relocate_jmp_addr_intl_non_bsp - offset cgroup:non_bsp_smi_code_begin + orgbase)
	mov	cgroup:[di+03],ax		; set segment
	jmp	short relocate_jmp_addr_intl_non_bsp; clear prefetch queue

relocate_jmp_addr_intl_non_bsp:
	db	0eah				; JMP FAR
	dw	cgroup:intel_non_bsp_cpu_smi_entry_10 - cgroup:non_bsp_smi_code_begin + orgbase ; offset
	dw	0000h				; segment

;-----------------------------------------------;

intel_non_bsp_cpu_smi_entry_10:

;-----------------------------------------------;
;     FOLLOWING CODE HAS BEEN ADDED TO TAKE	;
;     CARE OF A BUG IN INTEL PENTIUM PRO CPU	;
;     (P6). ERRATA #38 (RSM CAN NOT RETURN TO	;
;     HALT IN 32BIT OS.				;
;-----------------------------------------------;

	test	byte ptr cs:cpu_dump_halt_auto_restart_intl,00000001b; previous instruction was 'HLT' ?
	jz	short intel_non_bsp_cpu_smi_entry_11; no...
	and	byte ptr cs:cpu_dump_halt_auto_restart_intl,11111110b; do not return to auto halt state
	dec	dword ptr cs:cpu_dump_eip_intl	; position the EIP to 'HLT' instruction
intel_non_bsp_cpu_smi_entry_11:

;-----------------------------------------------;

	mov	ax,cs:bsp_code_seg_cseg		; (ax) = code segment for boot strap processor
	mov	gs,ax				; (gs) = code segment for boot strap processor

	mov	ax,cs				; (ax) = code segment for SMI execution for current processor

	mov	ds,ax				; set (DS) as PM BIOS data segment for current processor
	mov	es,ax				; set (ES) as PM BIOS data segment for current processor

	mov	ss,ax				; set (SS) as PM BIOS data segment for current processor
	mov	sp,pm_bios_global_stack_ptr	; set (SP) for GLOBAL stack pointer for current processor

	call	non_bsp_smi_handler		; handle the SMI for non-BSP processor

;---------------------------------------------------------------;
;		    INTEL_NON_BSP_CPU_SMI_EXIT			;
;---------------------------------------------------------------;
;	Input : NONE						;
;	Output: NONE						;
;---------------------------------------------------------------;

intel_non_bsp_cpu_smi_exit	proc	near

	intel_rsm				; RSM (resume from SMI)

intel_non_bsp_cpu_smi_exit	endp
intel_non_bsp_cpu_smi_entry	endp

;---------------------------------------------------------------;
;*****************************************************************;
;*****************************************************************;
;**								**;
;**	(C)Copyright 1985-1996, American Megatrends Inc.	**;
;**								**;
;**			All Rights Reserved.			**;
;**								**;
;**		6145-F, Northbelt Parkway, Norcross,		**;
;**								**;
;**		Georgia - 30071, USA. Phone-(770)-246-8600.	**;
;**								**;
;*****************************************************************;
;*****************************************************************;
;---------------------------------------------------------------;
;			 NON_BSP_SMI_HANDLER			;
;---------------------------------------------------------------;
;	Input : (GS) code/data segment for boot strap processor	;
;		(DS) PM BIOS data segment for current processor	;
;		(ES) PM BIOS data segment for current processor	;
;		STACK PRESENT					;
;	Output: NONE						;
;	Register destroyed : ALL GENERAL PURPOSE		;
;---------------------------------------------------------------;

non_bsp_smi_handler	proc	near

	mov	ax,cs:current_processor_bit_cseg; (ax) = bit position set for current processor
	mov	di,processor_in_smi_info_cseg	; (di) = pointer to processor in SMI info
	lock	or gs:[di],ax			; set current processor in SMI
						; LOCK the previous instruction

; Fixed:
; 1. Suspend then wakeup, NT found 1 CPU (not 2)
; 2. USB enabled, 1 CPU found only
;...............................................;
;	xor	cx,cx				; wait in 64K loop for BSP processor in SMI
	mov	cx,100h
;-----------------------------------------------;
non_bsp_smi_handler_10:
	test	word ptr gs:[di],boot_strap_processor_bit; is boot strap processor in SMI ?
	loopz	non_bsp_smi_handler_10		; wait for BSP in SMI
	jnz	short non_bsp_smi_handler_11	; yes...

non_bsp_smi_handler_12:
	not	ax				; bit position reset for current processor
	lock	and gs:[di],ax			; set current processor not in SMI
						; LOCK the previous instruction
	ret

;-----------------------------------------------;

non_bsp_smi_handler_11:
	test	word ptr gs:[di],boot_strap_processor_bit; is boot strap processor in SMI ?
	jz	short non_bsp_smi_handler_12	; no...EXIT
	jmp	short non_bsp_smi_handler_11	; wait till boot strap processor out of SMI

non_bsp_smi_handler	endp

;---------------------------------------------------------------;
;*****************************************************************;
;*****************************************************************;
;**								**;
;**	(C)Copyright 1985-1996, American Megatrends Inc.	**;
;**								**;
;**			All Rights Reserved.			**;
;**								**;
;**		6145-F, Northbelt Parkway, Norcross,		**;
;**								**;
;**		Georgia - 30071, USA. Phone-(770)-246-8600.	**;
;**								**;
;*****************************************************************;
;*****************************************************************;
;---------------------------------------------------------------;
