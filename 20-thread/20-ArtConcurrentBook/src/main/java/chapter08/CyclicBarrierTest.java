package chapter08;import java.util.concurrent.CyclicBarrier;/** * 8.2 同步屏障CyclicBarrier  代码清单8-3 */public class CyclicBarrierTest {    // CyclicBarrier 默认的构造方法是 CyclicBarrier（int parties），其参数表示屏障拦截的线程    // 数量，每个线程调用 await 方法告诉 CyclicBarrier 我已经到达了屏障，然后当前线程被阻塞。    static CyclicBarrier c = new CyclicBarrier(2);    public static void main(String[] args) {        new Thread(new Runnable() {            @Override            public void run() {                try {                    c.await();                } catch (Exception e) {                }                System.out.println(1);            }        }).start();        try {            c.await();        } catch (Exception e) {        }        System.out.println(2);    }}//第一种可能输出如下:/*12 *///第二种可能输出如下:/*21 */