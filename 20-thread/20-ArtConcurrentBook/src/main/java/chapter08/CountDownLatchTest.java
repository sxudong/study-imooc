package chapter08;import java.util.concurrent.CountDownLatch;/** * 8.1 等待多线程完成的CountDownLatch  代码清单8-2 * * CountDownLatch 也可以实现 join 的功能，并且比 join 的功能更多 */public class CountDownLatchTest {    // int类型的参数作为计数器，如果你想等待N个点完成，这里就传入N    static CountDownLatch c = new CountDownLatch(2);    public static void main(String[] args) throws InterruptedException {        new Thread(new Runnable() {            @Override            public void run() {                // 1个线程里的 N 个执行步骤                System.out.println(1);                c.countDown(); //自减1                System.out.println(2);                c.countDown(); //自减1            }        }).start();        c.await();        System.out.println("3");    }}/* Output:123 */