package chapter07;import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;/** * 7.4 原子更新字段类 */public class AtomicIntegerFieldUpdaterTest {    // 使用静态方法 newUpdater() 创建一个更新器，并且需要设置想要更新的类和属性    private static AtomicIntegerFieldUpdater<User> fieldUpdate = AtomicIntegerFieldUpdater.newUpdater(User.class, "old");    public static void main(String[] args) {        User conan = new User("conan", 10);        System.out.println(fieldUpdate.get(conan)); //10        System.out.println(fieldUpdate.getAndIncrement(conan)); //10        System.out.println(fieldUpdate.get(conan)); //11    }    public static class User {        private String      name;        public volatile int old;        public User(String name, int old) {            this.name = name;            this.old = old;        }        public String getName() {            return name;        }        public int getOld() {            return old;        }    }}