package chapter07;import java.util.concurrent.atomic.AtomicInteger;import java.util.function.IntUnaryOperator;/** * 7.1 自定义原子整数的操作函数 */public class AtomicIntegerTest3 {    public static void main(String[] args) {        AtomicInteger i = new AtomicInteger(100);        AtomicInteger j = new AtomicInteger(100);        //CAS操作：保证原子性        i.updateAndGet(value -> value * 10);        System.out.println("i = " + i.get());        updateAndGet(j, p -> p * 10);        System.out.println("j = " + j);    }    //自定义原子整数的操作函数    public static void updateAndGet(AtomicInteger i, IntUnaryOperator operator) {        while (true) {            int prev = i.get();            int next = operator.applyAsInt(prev);            if (i.compareAndSet(prev, next)) {                break;            }        }    }}/* Output:i = 1000j = 1000 */