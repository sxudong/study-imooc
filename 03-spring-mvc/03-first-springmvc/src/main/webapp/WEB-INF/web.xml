<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         version="2.5">
    <listener>
        <listener-class>com.learn.listener.MyDataContextListener</listener-class>
    </listener>

<!--    <servlet>-->
<!--        <servlet-name>springmvc</servlet-name>-->
<!--        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>-->
<!--        &lt;!&ndash;-->
<!--            DispatcherServlet在初始化方法里面，会读取该初始化参数的值来获取spring配置文件的位置，然后启动spring容器。-->
<!--         &ndash;&gt;-->
<!--        <init-param>-->
<!--            <param-name>contextConfigLocation</param-name>-->
<!--            <param-value>classpath:spring-mvc.xml</param-value>-->
<!--        </init-param>-->
<!--        <load-on-startup>1</load-on-startup>-->
<!--    </servlet>-->
<!--    <servlet-mapping>-->
<!--        <servlet-name>springmvc</servlet-name>-->
<!--        <url-pattern>*.do</url-pattern>-->
<!--    </servlet-mapping>-->

    <!-- 测试Servlet -->
    <!-- 1.声明Servlet的类型，并给它承一个别名（小名） -->
    <servlet>
        <servlet-name>time</servlet-name>
        <servlet-class>com.learn.servlet.TimeServlet</servlet-class>
    </servlet>
    <!-- 2.通过别名引用Servlet，并给它取一个网名（访问路径） http://localhost:8080/springmvc/ts -->
    <servlet-mapping>
        <servlet-name>time</servlet-name>
        <!-- 网名以/开头 -->
        <url-pattern>/ts</url-pattern>
    </servlet-mapping>

</web-app>
